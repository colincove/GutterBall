package gameObjects.launcher;

import infoHolders.DrawInfo;
import infoHolders.UpdateInfo;

import com.example.swings.R;

import android.graphics.Rect;
import android.graphics.drawable.BitmapDrawable;
import gameControllers.Game;
import Components.DrawableGameComponent;

public class FingerAnimation extends DrawableGameComponent implements ILauncherListener {
	private int ANIM_STATE=0;
	private Launcher launcher;
	private BitmapDrawable hand;
	private int alpha;
	private int hand_y;
	private float scale=1;
	private int delay=0;
	private boolean launched;//stop drawing the hand afdter the first launch
	private float anim;
	public FingerAnimation(Game game, Launcher launcher) {
		super(game);
		initialize(launcher);
	}

	public FingerAnimation(Game game, int drawOrder, Launcher launcher) {
		super(game, drawOrder);
		initialize(launcher);
	}
	private void initialize(Launcher launcher){
		this.launcher=launcher;
		launcher.addLauncherListener(this);
		this.setPos(launcher.getX(), launcher.getY());
		hand  = (BitmapDrawable) game.getResources().getDrawable(R.drawable.icon_hand);
		setState(0);
	}
	public void update(UpdateInfo updateInfo){
		super.update(updateInfo);
		
		switch(ANIM_STATE){
		case 0:
			//starting position into down position
			alpha=255-(int)(255*anim);
			scale=1+1*anim;
			hand_y=0;
			anim=anim*0.9f;
			if(anim<0.05){
				setState(1);
			}
		case 1:
			//down position into swipe
			alpha=(int)(255*anim);
			scale=1;
			hand_y=(int)(5-(5*anim));
			anim=anim*0.9f;
			if(anim<0.05){
				setState(2);
			}
		case 2:
			//animation complete, place a delay in here
			if(++delay>100){
				setState(0);
			}
		}
		
	}
	public void draw(DrawInfo drawInfo){
		super.draw(drawInfo);
		int handWidth=2;
		Rect des = new Rect(
				(int)gameView.toScreenX(getX()-handWidth*scale), 
				(int)gameView.toScreenY(getY()-handWidth*scale+hand_y), 
				(int)gameView.toScreenX(getX()+handWidth*scale), 
				(int)gameView.toScreenY(getY()+handWidth*scale+hand_y));
		hand.setBounds(des);
		hand.draw(drawInfo.getCanvas());
	}
	private void setState(int animState){
		switch(animState){
		case 0:
			//starting position.
			alpha=0;
			hand_y=0;
			scale=2;
		case 1:
			//visible before swipe
			alpha=255;
			hand_y=0;
			scale=1;
		case 2:
			//complete
			alpha=0;
			hand_y=5;
			scale=1;
		}
		ANIM_STATE=animState;
		delay=0;
		anim=1f;
	}

	@Override
	public void enableLauncher(Launcher launcher) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void disableLauncher(Launcher launcher) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void launch(Launcher launcher, float x, float y) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void touchLauncher(Launcher launcher, float x, float y) {
		// TODO Auto-generated method stub
		this.markDestroy();
	}

	@Override
	public void pullingLauncher(Launcher launcher, float x, float y) {
		// TODO Auto-generated method stub
		
	}
	public void destroy(){
		super.destroy();
		launcher.removeLauncherListener(this);
		launcher=null;
		hand=null;
		
	}
}
