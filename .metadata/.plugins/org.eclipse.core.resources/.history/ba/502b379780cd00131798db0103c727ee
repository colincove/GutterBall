package gameObjects.launcher;

import infoHolders.DrawInfo;
import infoHolders.UpdateInfo;

import com.example.swings.R;

import android.graphics.drawable.BitmapDrawable;
import gameControllers.Game;
import Components.DrawableGameComponent;

public class FingerAnimation extends DrawableGameComponent implements ILauncherListener {
	private Launcher launcher;
	private BitmapDrawable hand;
	private int alpha;
	private int hand_y;
	private boolean launched;//stop drawing the hand afdter the first launch
	public FingerAnimation(Game game, Launcher launcher) {
		super(game);
		initialize(launcher);
	}

	public FingerAnimation(Game game, int drawOrder, Launcher launcher) {
		super(game, drawOrder);
		initialize(launcher);
		
	}
	private void initialize(Launcher launcher){
		this.launcher=launcher;
		launcher.addLauncherListener(this);
		this.setPos(launcher.getX(), launcher.getY());
		hand  = (BitmapDrawable) game.getResources().getDrawable(R.drawable.icon_hand);
	}
	public void update(UpdateInfo updateInfo){
		super.update(updateInfo);
	}
	public void draw(DrawInfo drawInfo){
		super.draw(drawInfo);
	}

	@Override
	public void enableLauncher(Launcher launcher) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void disableLauncher(Launcher launcher) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void launch(Launcher launcher, float x, float y) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void touchLauncher(Launcher launcher, float x, float y) {
		// TODO Auto-generated method stub
		this.markDestroy();
	}

	@Override
	public void pullingLauncher(Launcher launcher, float x, float y) {
		// TODO Auto-generated method stub
		
	}
}
